# -*- coding: utf-8 -*-
"""AD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WVx2Oy3etSxpANk8yS6hvLMYlyQytnj6
"""

def add(x,y):
  return x+y
result=add(3,4)
print(result)

result=lambda x,y:x+y
print(result(3,4))

result=lambda x,y:x*y
print(result(5,6))

#iterablel
lst=[1,2,3,4,5,6,7,8,9]
var_iter=iter(lst)
print(var_iter)

type(var_iter)

for i in var_iter:
  if i % 2==0:
    print(i)

#by using iter keyword check for number is <5 then add the 1 value and print the number

for i in var_iter:
  if i < 5:
    i+=1
    print(i)

ls=[1,2,3,4,56,]
var_iter=iter(ls)

for i in var_iter:
  if i < 5:
    i+=1
    print(i)

#generator
def square(i):
  for i in range(i):
    i = i+1
    return i
res = square(2)
print(res)

from google.colab import files
import pandas as pd

uploaded = files.upload()

aaa=list(uploaded.keys())[0]
df=pd.read_csv(aaa)
df

df.iloc[1:3,2:4]

df.iloc[20:23,2:4]

df.iloc[[7,5,25,38],10]

df.iloc[[7,5,25,38],2:12:8]

df.describe()

df.head(10)
df.iloc[1:50,1:5]
data = df['First Name'] == 'Preston'
ff = df['Company'] == 'Vega-Gentry'
ff,data

df.drop('Phone 2',axis=1)

df.drop('Phone 2',axis=1)

df.isnull()

import lyricsgenius

def get_song_lyrics(song_title):
    # Replace 'your_access_token' with your actual Genius API access token
    genius = lyricsgenius.Genius(CVM70mRkcZei5720__blKHQNrW_GvAK_2H6zcChnuR-NdvXAo9cjwJjtvN99Zz9O)

    # Search for the song
    song = genius.search_song(song_title)

    if song:
        return song.lyrics
    else:
        return "Sorry, I couldn't find the lyrics for that song."

def main():
    print("Welcome to the Song Lyrics Finder!")

    while True:
        song_title = input("Please enter the title of the song (or type 'exit' to quit): ")
        if song_title.lower() == 'exit':
            print("Thank you for using the Song Lyrics Finder!")
            break

        lyrics = get_song_lyrics(song_title)
        print("\nLyrics:\n")
        print(lyrics)

if _name_ == "_main_":
    main()

dict1 ={ 'Customer_id':[1,2,3,4,5,6],'Product':['Television','er','evision','Televi','Tesion','Teln']}
dict2 ={'Customer_id':[2,4,6,8],'State':['California','California','Texas','Texas']}
df1=pd.DataFrame(dict1)
df2=pd.DataFrame(dict2)
df1,df2

inner_join=pd.merge(df1,df2,on='Customer_id',how='inner')
outter_join=pd.merge(df1,df2,on='Customer_id',how='outer')
outter_join,inner_join

#left_join=pd.merge(df1,df2,on='Customer_id',how='left')
right_join=pd.merge(df1,df2,on='Customer_id',how='right')
#left_join
right_join

li=[2,3,4,56,78,4,5,6]
li[0:7:3]

a=str(input())
if a=="jana gana mana":
  print("nen evariki vinna")
else:
  print("em undi le ")

import pandas as pd
data = pd.DataFrame({'Brand':['BMW','BENZ','RANGE ROVER','ROYCE','BUGGATI','RANGE ROVER','BMW','TATA','KIA'],'Year':[2012,2014,2011,2015,2012,2016,2014,2018,2019],'Kms driven':[50000,30000,60000,25000,10000,46000,31000,15000,12000],'City':['Hyderabad','Delhi','Mumbai','Delhi','Mumbai','Delhi','Mumbai','Hyderabad','Bengalore'],'Mileage':[28,27,29,45,46,38,29,41,48]})
display(data)

display(data.loc[(data.Brand=='BENZ') & (data.Year==2014)])

display(data.loc[(data.City=='Mumbai')])

display(data.loc[data.Mileage<=50])

import pandas as pd


sales_data = {
    'TranscationId':[1,2,3,4,5],
    'CustomerId':[101,102,103,104,105],
    'Amount':[250,300,400,500,600],
    'Date':['2025-01-01','2025-01-02','2025-01-03','2025-01-04','2025-01-05']
}

sales_df = pd.DataFrame(sales_data)

Customer_data ={
    'CustomerID':[101,102,103,104,105],
    'CustomerName':['John','Jane','Bob','Alice','Eve'],
    'Age':[25,30,35,40,45],
    'City':['Hyd','Ban','AP','TG','']
}

customer_df = pd.DataFrame(Customer_data)

print(f"SALES DATA :\n{sales_df} ,\nCUSTOMER DATA :\n{customer_df}")

#exploring the data set using shape and describe

print("\n Shape  of SalesData:",sales_df.shape)
print("\n Shape  of CustomerData:",customer_df.shape)
print("\n Describe  of SalesData:",sales_df.describe())
print("\n Describe  of CustomerData:",customer_df.describe())

for i in range(2):
  pass


i=0
while (i<5):
  print(i)
  i+=1

sales_df.dropna()
customer_df.dropna()

import numpy as np

arr = np.array([[1,2,3,4,5],[3,4,5,6,7]])
print(arr)
print(arr[1,2])

import numpy as np

arr = np.array([[1,2,3,4,5],[3,4,5,6,7],[2,3,45,56,43]])
print(arr)
a= int(input("Enter the row :"))
b= int(input("Enter the element: "))
print(arr[a,b])

import numpy as np

arr = np.array([[[1,2,3,4,5],[3,4,5,6,7],[2,3,45,56,43]]])
print(arr)
print(arr[0,1,2])
print(arr[0,2,3])

import numpy as np
arr= np.array([1,2,3,4,5,6,7,8,9,20])

newarr = np.array_split(arr,3)
print(newarr)
print(newarr[0],newarr[1],newarr[2])

import pandas as pd

Patient_information ={
    "patient_name":["Sunil","Pavan","Mani","Rajni"],
    "Age":[19,18,4,2],
    "Date_of_oppointment":['2024-8-21','2024-7-20','2024-6-12','2024-5-11'],
    "patient_id":[101,102,103,104]

}

drag_quantity ={
    "name":["snji","shins","sdaas","sasa"],
    "quantity":[100,90,80,70],
    "patient_id":[101,102,103,104]
}

patient_df = pd.DataFrame(Patient_information)
drag_df = pd.DataFrame(drag_quantity)
print(f"PATIENT DATA :\n{patient_df} ,\nDRAG DATA :\n{drag_df}")

filtered_df = patient_df[patient_df["Age"] < 6]

print(filtered_df)

merged_df = pd.merge(patient_df, drag_df, on="patient_id", how="inner")


print(f"Merged DataFrame (Inner Join):\n{merged_df}")

