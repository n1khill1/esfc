# -*- coding: utf-8 -*-
"""PythonExamples.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rYbzpPvDmLDTQXenwVTCzGz9XnsfjTfH
"""

name = "sunil "
name

# Lists  is mutable
a = ["b","d",6.5,4,False,"hi"]
a[0]
a[0]="c"
a

a.append("sunil")
lis=[1,2,45,66,43,5,6,23]
lis.sort
lis
lis.reverse()
lis
lis.copy()
lis.insert(2,5656)
lis
print(lis.pop(0))
lis.pop(0)
lis
lis.remove(5656)
lis

from re import A
#Tuple is immutable

a = (1,2,3,4,3,35,"sunil",False)
type(a)
a[0]


#methods

a.count(1)
a.index(3)
a*3
a
len(a)

my=(1,2,3)
a,b,c=my

a,b,c

fruits = []

f1 = input("Enter fruit 1: ")
fruits.append(f1)
f2 = input("Enter fruit 2: ")
fruits.append(f2)
f3 = input("Enter fruit 3: ")
fruits.append(f3)
f4 = input("Enter fruit 4: ")
fruits.append(f4)
f5 = input("Enter fruit 5: ")
fruits.append(f5)
f6 = input("Enter fruit 6: ")
fruits.append(f6)
f7 = input("Enter fruit 7: ")
fruits.append(f7)

print(fruits)

l =[23,4,55,34]
 sum(l)

#sets and dictionary
words = {
     "matladu" : "speak",
     "thinnu" : "wat",
    "bane" : "super"
 }


word = input("enter")

print(words[word])

s= set()
s.add(18)
s.add("18")
s

len(s)
s={}
type(s)
s=set()
type(s)

d ={}
name = input("enter friends name:")
lang = input("enter friends language:")
d.update({name:lang})
name = input("enter friends name:")
lang = input("enter friends language:")
d.update({name:lang})
name = input("enter friends name:")
lang = input("enter friends language:")
d.update({name:lang})
name = input("enter friends name:")
lang = input("enter friends language:")
d.update({name:lang})
print(d)

a = int(input("enter you age: "))

if(a>=18):
  print("yes")
else:
  print("NO")

a1 = int(input("enter number 1:"))
a2 = int(input("enter number 2:"))
a3 = int(input("enter number 3:"))
a4 = int(input("enter number 4:"))

if (a1>a2 and a1>a3 and a1>a4):
  print(a1)
elif (a2>a1 and a2>a3 and a2>a4):
  print(a2)

elif (a3>a1 and a3>a2 and a3>a4):
  print(a3)
else:
  print(a4)

marks1 = int(input("Enter marks 1:"))
marks2 = int(input("Enter marks 2:"))
marks3 = int(input("Enter marks 3:"))

total_percentage = (marks1 + marks2 + marks3)/300 *100
print(total_percentage)

if(total_percentage>=40 and marks1>=33 and marks2>=33 and marks3>=33):
  print("you are pass",total_percentage)
else:
  print("try next year",total_percentage)

p1="sunil"
p2="jio"
p3="aniks"

message = input("enter a comment: ")

if((p1 in message)or  (p2 in message)or (p3 in message)):
  print("spam ")
else:
  print("not spam")

user_name = input("enter username :")

if(len(user_name)<10):
  print("username is valid")
else:
  print("username is invalid")

l1=["harry","sunil","jc","anuk"]

name = input("enter name :")

if(name in l1):
  print("present")
else:
  print("not present")

marks =int(input("enter your marks:"))
if ( marks<=100 and marks>=90):
  print("grade A")
elif(marks<90 and marks>=80):
  print("grade B")
elif(marks<80 and marks>=70):
  print("grade C")
elif(marks<70 and marks>=60):
  print("grade D")
else:
  print("Fail")

post ="em anukuntunva na peru sunil"

if "sunIl".lower() in post.lower():
  print("sunil is present")
else:
  print("sunil is not present")

for i in range (1,6):
  print(i)

#while loops

i = 1
while(i<51):
  print(i)
  i +=1

l =[ 1,"sunil",2,"siijd"]

i=0
while(i<len(l)):
  print(l[i])
  i+=1

for i in range(1,10,2):
  print(i)

l=[1,2,3,4,5,23,43,3]
for i in l:
  print(i)

t=(6,3,4,5,3)
for i in t:
  print(i)


s= "sunil"
for i in s:
  print(i)

l=[1,2,3]

for item in l:
  print(item)

else:
  print("Done")

for i in range(100):
  if(i == 10):
    break
  print(i)

for i in range(20):
  if(i == 10):
    continue
  print(i)

n = int(input("Enter a number: "))

for i in range (1,11):
  print(f"{n}x{i}={n*i}")

l =["sunil","hi","ako","asdi"]

for name in l:
  if(name.startswith("s")):
    print("hello",name)

n= int(input("Enter a number: "))
i=1

while(i<11):
  print(f"{n} x {i} = {n*i}")
  i+=1

n = int(input("Enter a number: "))
for i in range(1,n):
  if(n%i)==0:
    print("Number is not prime")
    break
  else:
    print("Number is  prime")
    break

n = int(input("Enter a number: "))
i=1
sum=0
while (i<=n):
  sum += i
  i += 1

print(sum)

n = int(input("Enter a number: "))
product =1
for i in range(1,n+1):
  product = product*i

print(f"The factorial of {n} is {product}")

n = int(input("Enter a number: "))
for i in range(1,n+1):
  print(" "* (n-i), end ="")
  print("*" *(2*i-1),end="")
  print("")

n = int(input("Enter a number: "))

 for i in range(1,n+1):
  if (i==1 or i==n):
    print("*"*n)
  else:
    print("*",end="")
    print(" "*(n-2),end="")
    print("*")

n = int(input("Enter a number: "))
for i in range (1,11):
  print(f"{n} x {11-i} = {n*(11-i)}")

class Employee:
  language = "py"
  salary = 120000

harry = Employee()
#harry.language = "javascript"
print(harry.language)

# self

class Employee:
  language = "py"
  salary = 120000

  def getInfo(self):
    print(f"the language is {self.language}. the salary is {self.salary}")
  @staticmethod
  def greet():
    print("Good Morining")

harry = Employee()
harry.language = "javascript"
print(harry.language)
harry.getInfo()
harry.greet()
# Employee.getInfo(harry)

# Init Constructure :
# self

class Employee:
  language = "py"
  salary = 120000

  def __init__(self,name,salary,language): # dunder method  which called automatically
    self.name=name
    self.salary=salary
    self.language=language
    print("I am creating an object")

  def getInfo(self):
    print(f"the language is {self.language}. the salary is {self.salary}")
  @staticmethod
  def greet():
    print("Good Morining")

harry = Employee("Harry",13000,"JavaScript")
print(harry.name,harry.salary,harry.language)

class Programmer:
  company= "Microsoft"
  def __init__(self,name,salary,pincode):
    self.name=name
    self.salary=salary
    self.pincode=pincode


p= Programmer("Sunil",12000,500054)
print(p.name,p.salary,p.pincode)
r= Programmer("Rohan",13000,500055)
print(r.name,r.salary,r.pincode)

class  Calcualtor:

  def __init__(self,num):
    self.num = num

  def Square(self):
    print(f"The square of {self.num} is {self.num*self.num}")

  def Cube(self):
    print(f"The cube of {self.num} is {self.num*self.num*self.num}")

  def Squareroot(self):
    print(f"The SquareRoot of {self.Squareroot} is {self.num**1/2}")


n = int(input("Enter the number:"))
a = Calcualtor(n)

a.Square()
a.Cube()
a.Squareroot()

